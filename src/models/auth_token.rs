/*
 * Chaos
 *
 * Central Management API - publicly exposed set of APIs for managing deployments
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@qernal.com
 * Generated by: https://openapi-generator.tech
 */

/// AuthToken : API auth token



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct AuthToken {
    #[serde(rename = "id")]
    pub id: uuid::Uuid,
    /// User
    #[serde(rename = "user_id")]
    pub user_id: uuid::Uuid,
    /// Token name
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "expiry_at", skip_serializing_if = "Option::is_none")]
    pub expiry_at: Option<String>,
    /// OAuth2 client id and client secret used to generate API access token. Client secret can't be created and must be saved on user side
    #[serde(rename = "token", skip_serializing_if = "Option::is_none")]
    pub token: Option<String>,
    #[serde(rename = "date")]
    pub date: Box<crate::models::Date>,
}

impl AuthToken {
    /// API auth token
    pub fn new(id: uuid::Uuid, user_id: uuid::Uuid, name: String, date: crate::models::Date) -> AuthToken {
        AuthToken {
            id,
            user_id,
            name,
            expiry_at: None,
            token: None,
            date: Box::new(date),
        }
    }
}


