/*
 * Chaos
 *
 * Central Management API - publicly exposed set of APIs for managing deployments
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@qernal.com
 * Generated by: https://openapi-generator.tech
 */

/// Location : Location of allowed clusters

#[allow(unused_imports)]
use crate::models;



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct Location {
    /// UUID of provider to deploy into
    #[serde(rename = "provider_id")]
    pub provider_id: uuid::Uuid,
    /// Deployment continent
    #[serde(rename = "continent", skip_serializing_if = "Option::is_none")]
    pub continent: Option<String>,
    /// Deployment country
    #[serde(rename = "country", skip_serializing_if = "Option::is_none")]
    pub country: Option<String>,
    /// Deployment city
    #[serde(rename = "city", skip_serializing_if = "Option::is_none")]
    pub city: Option<String>,
}

impl Location {
    /// Location of allowed clusters
    pub fn new(provider_id: uuid::Uuid) -> Location {
        Location {
            provider_id,
            continent: None,
            country: None,
            city: None,
        }
    }
}


