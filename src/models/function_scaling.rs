/*
 * Chaos
 *
 * Central Management API - publicly exposed set of APIs for managing deployments
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@qernal.com
 * Generated by: https://openapi-generator.tech
 */

/// FunctionScaling : Scaling logic

#[allow(unused_imports)]
use crate::models;



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct FunctionScaling {
    /// CPU or Memory supported
    #[serde(rename = "type")]
    pub r#type: Type,
    /// For type to drop below before scale down
    #[serde(rename = "low")]
    pub low: i32,
    /// For type to go above before scale up
    #[serde(rename = "high")]
    pub high: i32,
}

impl FunctionScaling {
    /// Scaling logic
    pub fn new(r#type: Type, low: i32, high: i32) -> FunctionScaling {
        FunctionScaling {
            r#type,
            low,
            high,
        }
    }
}

/// CPU or Memory supported
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "cpu")]
    Cpu,
    #[serde(rename = "memory")]
    Memory,
}

impl Default for Type {
    fn default() -> Type {
        Self::Cpu
    }
}

