/*
 * Chaos
 *
 * Central Management API - publicly exposed set of APIs for managing deployments
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@qernal.com
 * Generated by: https://openapi-generator.tech
 */


#[allow(unused_imports)]
use crate::models;



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct MetricResourceAggregationResourcesBucketsInnerHistogramBucketsInner {
    /// Number of documents in the bucket
    #[serde(rename = "doc_count", skip_serializing_if = "Option::is_none")]
    pub doc_count: Option<i32>,
    #[serde(rename = "counter", skip_serializing_if = "Option::is_none")]
    pub counter: Option<Box<models::MetricResourceAggregationResourcesBucketsInnerHistogramBucketsInnerCounter>>,
    #[serde(rename = "gauge", skip_serializing_if = "Option::is_none")]
    pub gauge: Option<Box<models::MetricResourceAggregationResourcesBucketsInnerHistogramBucketsInnerGauge>>,
    /// Histogram key (typically unix timestamp)
    #[serde(rename = "key", skip_serializing_if = "Option::is_none")]
    pub key: Option<f64>,
    /// Histogram key as string/date-time
    #[serde(rename = "key_as_string", skip_serializing_if = "Option::is_none")]
    pub key_as_string: Option<String>,
}

impl MetricResourceAggregationResourcesBucketsInnerHistogramBucketsInner {
    pub fn new() -> MetricResourceAggregationResourcesBucketsInnerHistogramBucketsInner {
        MetricResourceAggregationResourcesBucketsInnerHistogramBucketsInner {
            doc_count: None,
            counter: None,
            gauge: None,
            key: None,
            key_as_string: None,
        }
    }
}


